---
description: When generating style codes, e.g., all .scss files
alwaysApply: false
---

# Lululemon UI - Style Guide

## Overview

Style guidelines for the Lulu Design System. Defined in `app/src/styles/`:
- `color-use.scss` - Color variables with light/dark theme support
- `spacing.scss` - Spacing and layout variables
- `font.scss` - Typography settings
- `shadow.scss` - Shadow effects
- `z-index.scss` - Z-index layering system

All styles support light and dark themes with automatic system preference detection.

---

# Color System

## Theme Support
- Light Theme: Default
- Dark Theme: Activated via `data-theme="dark"` attribute
- System Theme Detection: Auto-switches based on system preferences

## Color Variables

### Brand & Semantic Colors
```scss
--brand-color;                // Primary brand (var(--hot-heat-4))
--color-semantic-active;      // Active states (var(--indigo-5))
--color-semantic-success;     // Success states (var(--wilderness-4))
--color-semantic-warning;     // Warning states (var(--amber-4))
--color-semantic-error;       // Error states (var(--hot-heat-4))
```

### Text Colors
```scss
--color-main;           // Primary text
--color-sec;            // Secondary text
--color-sec-trans;      // Secondary text with transparency (0.48)
--color-neg;            // Disabled/negative text
--color-neg-trans;      // Negative text with transparency (0.32)
```

### Background Colors
```scss
--color-bg-main;           // Primary background
--color-bg-sec;            // Secondary background
--color-bg-sec-trans;      // Secondary background with transparency (0.02)
--color-bg-sec-2;          // Tertiary background
--color-bg-sec-2-trans;    // Tertiary background with transparency (0.04)
```

### Border Colors
```scss
--color-border-main;           // Primary border
--color-border-main-trans;     // Primary border with transparency (0.08)
--color-border-darken-trans;   // Darkened border with transparency (0.16)
```

## Usage Guidelines

### Text Colors
- `--color-main`: Page titles, primary content, navigation
- `--color-sec`: Subtitles, descriptions, timestamps, labels
- `--color-neg`: Disabled states, placeholders

### Background Colors
- `--color-bg-main`: Page background, cards, modals
- `--color-bg-sec`: Sidebars, toolbars, hover states
- `--color-bg-sec-2`: Input fields, nested cards, selected states

### Border Colors
- `--color-border-main`: Card borders, dividers, table borders
- `--color-border-darken-trans`: Emphasis borders, focus states

### Brand & Semantic Colors
- `--brand-color`: Primary buttons, brand identity, important actions
- `--color-semantic-active`: Active states, links, selected states
- `--color-semantic-success`: Success messages, confirmation states
- `--color-semantic-warning`: Warning messages, caution states
- `--color-semantic-error`: Error messages, destructive actions

## Transparency Variants

| Variable | Opacity | Use Cases |
|----------|---------|-----------|
| `--color-bg-sec-trans` | 0.02 | Subtle background layers |
| `--color-bg-sec-2-trans` | 0.04 | Light background differentiation |
| `--color-border-main-trans` | 0.08 | Subtle borders, dividers |
| `--color-border-darken-trans` | 0.16 | Visible borders, shadows |
| `--color-neg-trans` | 0.32 | Disabled text with transparency |
| `--color-sec-trans` | 0.48 | Secondary text with transparency |

## Best Practices

**DO:**
- Always use CSS variables (e.g., `var(--color-main)`)
- Maintain text hierarchy: Primary → `--color-main`, Secondary → `--color-sec`, Disabled → `--color-neg`
- Test in both light and dark modes
- Only transition movement properties (`transform`, `top`, `left`)
- Keep color changes instant (no transitions on color properties)

**DON'T:**
- Use hard-coded color values
- Add transitions to color-related properties (`color`, `background-color`, `border-color`)
- Use non-system colors
- Overuse transparency

```css
/* ✅ Correct - Color changes instantly */
.item {
  background-color: var(--color-bg-sec);
}
.item:hover {
  background-color: var(--color-bg-sec-2);
}

/* ❌ Incorrect - Don't transition colors */
.item {
  background-color: var(--color-bg-sec);
  transition: background-color 0.2s ease; /* NO! */
}
```

## Component Examples

```css
/* Button */
.btn-primary {
  background-color: var(--brand-color);
  color: white;
}
.btn-primary:hover {
  box-shadow: inset 0 0 0 100px rgba(0, 0, 0, 0.1);
}

.btn-secondary {
  background-color: var(--color-bg-sec);
  color: var(--color-main);
  border: 1px solid var(--color-border-main);
}
.btn-secondary:hover {
  background-color: var(--color-bg-sec-2);
}

/* Card */
.card {
  background-color: var(--color-bg-main);
  border: 1px solid var(--color-border-main);
  color: var(--color-main);
}
.card:hover {
  border-color: var(--color-border-darken-trans);
}
.card-description {
  color: var(--color-sec);
}

/* Input */
.input {
  background-color: var(--color-bg-sec-2);
  border: 1px solid var(--color-border-main);
  color: var(--color-main);
}
.input::placeholder {
  color: var(--color-neg-trans);
}
.input:focus {
  border-color: var(--color-semantic-active);
}

/* List */
.list-item {
  color: var(--color-main);
  border-bottom: 1px solid var(--color-border-main-trans);
}
.list-item:hover {
  background-color: var(--color-bg-sec-trans);
}
.list-item-active {
  background-color: var(--color-bg-sec);
  border-left: 2px solid var(--color-semantic-active);
}
```

## SCSS Implementation

```scss
// Theme mixins
@mixin light-theme {
  --color-main: #1a1a1a;
  --color-sec: #858585;
  // ... other variables
}

@mixin dark-theme {
  --color-main: #eaeaea;
  --color-sec: #b3b3b3;
  // ... other variables
}

// Apply themes
:root { @include light-theme; }
:root[data-theme="dark"] { @include dark-theme; }

// System detection
@media (prefers-color-scheme: dark) {
  :root:not([data-theme]) { @include dark-theme; }
}
```

## Theme Switching

```javascript
// Toggle theme
function toggleTheme() {
  const root = document.documentElement;
  const newTheme = root.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
  root.setAttribute('data-theme', newTheme);
  localStorage.setItem('theme', newTheme);
}
```

---

# Spacing System

```scss
--spacing-nav-item-size: 32px;
--spacing-nav-padding: 12px;
--spacing-nav-size: calc(...);
--content-padding: 48px;
```

---

# Typography System

```scss
--ff-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
--ff-serif: "Times New Roman", Times, serif;
--ff-mono: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
```

---

# Shadow System

```scss
--pop-shadow: 0 8px 16px rgba(0, 0, 0, 0.16);
```

Use for elevated elements (cards, dropdowns, modals).

---

# Z-Index System

```scss
--z-index-nav: 1000;          // Navigation bars, sidebars
--z-index-popup-sec: 2000;    // Secondary popups (tooltips, dropdowns)
--z-index-popup-main: 3000;   // Primary popups (modals, dialogs)
```

Always use z-index variables; never use arbitrary values.

---

# Quick Reference

## All Available Variables

**Colors:**
- Brand & Semantic: `--brand-color`, `--color-semantic-active`, `--color-semantic-success`, `--color-semantic-warning`, `--color-semantic-error`
- Text: `--color-main`, `--color-sec`, `--color-sec-trans`, `--color-neg`, `--color-neg-trans`
- Background: `--color-bg-main`, `--color-bg-sec`, `--color-bg-sec-trans`, `--color-bg-sec-2`, `--color-bg-sec-2-trans`
- Border: `--color-border-main`, `--color-border-main-trans`, `--color-border-darken-trans`

**Spacing:**
- `--spacing-nav-item-size`, `--spacing-nav-padding`, `--spacing-nav-size`, `--content-padding`

**Typography:**
- `--ff-sans`, `--ff-serif`, `--ff-mono`

**Shadows:**
- `--pop-shadow`

**Z-Index:**
- `--z-index-nav`, `--z-index-popup-sec`, `--z-index-popup-main`

